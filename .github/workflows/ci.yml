name: CI
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1.5"
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2.0.0
        id: current-time
        with:
          format: YYYYMMDD
      - name: Cache Julia packages
        id: cache-julia-packages
        uses: actions/cache@v2
        with:
          path: ~/.julia/registries
          key: ${{ runner.os }}-build-julia-${{ steps.current-time.outputs.formattedTime }}
          restore-keys: |
            ${{ runner.os }}-build-julia-
      - name: Update
        if: steps.cache-julia-packages.outputs.cache-hit != 'true'
        run: |
          julia -e "using Pkg; Pkg.update()"
          julia -e "using Pkg; Pkg.Registry.add(RegistrySpec(url=\"https://github.com/kyungminlee/KyungminLeeRegistry.jl.git\"))"
      - name: Build
        run: julia --project -e 'import Pkg; Pkg.build()'
      - name: Test
        env:
          JULIA_NUM_THREADS: '2'
        run: |
          julia --project --check-bounds=yes -e 'import Pkg; Pkg.test(; coverage=true, julia_args=`--inline=no`)'
      - name: Submit Coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          julia --project -e 'import Pkg; import GroupTools; cd(joinpath(dirname(pathof(GroupTools)), "..")); Pkg.add("Coverage");'
          julia --project -e 'using Coverage; Codecov.submit(Codecov.process_folder());'
          julia --project -e 'using Coverage; Coveralls.submit(process_folder());'
      - name: Documentation
        env:
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: |
          julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
          julia --project=docs/ docs/make.jl
